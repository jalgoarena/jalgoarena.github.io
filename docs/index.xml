<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on JAlgoArena Home</title>
    <link>https://jalgoarena.github.io/docs/</link>
    <description>Recent content in Docs on JAlgoArena Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Aug 2018 07:31:06 +0200</lastBuildDate>
    
	<atom:link href="https://jalgoarena.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Start</title>
      <link>https://jalgoarena.github.io/docs/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jalgoarena.github.io/docs/quick-start/</guid>
      <description>Deploy with Docker &amp; Nomad To deploy JAlgoArena - you will need to spin up Nomad and Consul clusters plus install Docker Engine.
 Make sure Docker is available on your machines Install Consul and Nomad clusters  use step0.sh to run locally on your laptop - it&amp;rsquo;s not recommended for production use case Install Consul Cluster Install Nomad Cluster  Once you have Nomad and Consul up and running, you may start running JAlgoArena external services:  Clone JAlgoArena-Nomad locally git clone https://github.</description>
    </item>
    
    <item>
      <title>Domain</title>
      <link>https://jalgoarena.github.io/docs/domain/</link>
      <pubDate>Thu, 02 Aug 2018 07:31:06 +0200</pubDate>
      
      <guid>https://jalgoarena.github.io/docs/domain/</guid>
      <description>Intro You will be able to see here all meaningful words appearing commonly in JAlgoArena domain. By domain we understand vocabulary used to describe business logic.
In case anything important is missing in here, please create a new issue.
Domain  Term Description   Submission The basic domain entity within JAlgoArena. It holds all necessery information for every user problem solution together with results after judgement. The possible states of your submission are:  WAITING - just after submitting but before judgement ACCEPTED - once your submission is accepted COMPILE_ERROR - your submission source code is not compiling RUNTIME_ERROR - there was runtime exception during tests of your submission TIME_LIMIT_EXCEEDED - time limit was exceeded during tests of your submission MEMORY_LIMIT_EXCEEDED - time memory was exceeded during tests of your submission  You can check all your submissions from main screen, clicking on Submissions menu item.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://jalgoarena.github.io/docs/architecture/</link>
      <pubDate>Wed, 25 Jul 2018 07:31:44 +0200</pubDate>
      
      <guid>https://jalgoarena.github.io/docs/architecture/</guid>
      <description>Intro JAlgoArena conducts many parts, which can be divided to:
 Node.JS hosted Web UI Traefik as Edge Service Nomad as scheduler Consul for Service Discovery Apache Kafka used for messaging internally in the backend Elastic Stack for capturing distributed logs Cockroach DB for highly available data storage JAlgoArena microservices delivering core features  Diagram  Publish submission to Kafka. Save new submission (JAlgoArena-Submissions) &amp;amp; start judge process (JAlgoArena-Judge)  Request submissions refresh via WebSocket subscriptions (JAlgoArena-Submissions)  Publish submission result Store submission and ranking result (the second only if submission is accepted) Request ranking &amp;amp; submissions refresh via WebSocket subscriptions  Components JAlgoArena microservices:</description>
    </item>
    
    <item>
      <title>Calculating Points</title>
      <link>https://jalgoarena.github.io/docs/calculating-points/</link>
      <pubDate>Tue, 24 Jul 2018 19:22:55 +0200</pubDate>
      
      <guid>https://jalgoarena.github.io/docs/calculating-points/</guid>
      <description>Problem Difficulty Firstly, base amount of points depends on problem difficulty:
 Difficulty Base Points   Easy 10 points   Medium 30 points   Hard 50 points   Time Penalty Secondly, amount of points which depends on time penalty:
 Elapsed Time / Time Limit Points Factor   &amp;gt;= 500 1.0   &amp;gt;= 100 3.0   &amp;gt;= 10 5.0   &amp;gt;= 1 8.</description>
    </item>
    
    <item>
      <title>Technology</title>
      <link>https://jalgoarena.github.io/docs/technology/</link>
      <pubDate>Thu, 02 Aug 2018 07:35:06 +0200</pubDate>
      
      <guid>https://jalgoarena.github.io/docs/technology/</guid>
      <description>Intro You will be able to see here all meaningful parts of JAlgoArena architecture which are not JAlgoArena microservices.
In case anything important is missing in here, please create a new issue.
Technology  Term Description   Traefik API Edge service which exposes REST and WebSocket API doing necessary path rewrites and load balancing. See more details on Traefik home page   Apache Kafka  Stream processing component which controls flow for serving submissions.</description>
    </item>
    
  </channel>
</rss>